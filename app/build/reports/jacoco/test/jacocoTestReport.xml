<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="app"><sessioninfo id="LAPTOP-I4ECEIM6-79e9acd9" start="1688917062520" dump="1688917079369"/><package name="hexlet/code"><class name="hexlet/code/Parser$1" sourcefilename="Parser.java"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="hexlet/code/Differ" sourcefilename="Differ.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="diffGenerate" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;" line="18"><counter type="INSTRUCTION" missed="0" covered="113"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="25"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="51"><counter type="INSTRUCTION" missed="6" covered="10"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generate" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="134"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="3" covered="30"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="hexlet/code/FormatStylish" sourcefilename="FormatStylish.java"><method name="&lt;init&gt;" desc="()V" line="4"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formattingStylish" desc="(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;" line="6"><counter type="INSTRUCTION" missed="0" covered="114"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="114"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="hexlet/code/Parser" sourcefilename="Parser.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/util/Map;" line="15"><counter type="INSTRUCTION" missed="2" covered="50"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="searchExtension" desc="(Ljava/lang/String;)Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defendingPath" desc="(Ljava/lang/String;)Ljava/nio/file/Path;" line="40"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="63"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="14"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="hexlet/code/FormatPlain" sourcefilename="FormatPlain.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatPlain" desc="(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;" line="8"><counter type="INSTRUCTION" missed="0" covered="85"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nameVariable" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="37"><counter type="INSTRUCTION" missed="7" covered="14"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="99"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="4" covered="22"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="hexlet/code/App" sourcefilename="App.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="26"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="()Ljava/lang/Integer;" line="33"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="hexlet/code/FormatJson" sourcefilename="FormatJson.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatJson" desc="(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="hexlet/code/Parser$2" sourcefilename="Parser.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="hexlet/code/Formatter" sourcefilename="Formatter.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="formatting" desc="(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="5" covered="27"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="27"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FormatJson.java"><line nr="8" mi="3" ci="0" mb="0" cb="0"/><line nr="10" mi="0" ci="4" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="App.java"><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="9" ci="0" mb="0" cb="0"/><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="33" mi="9" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Parser.java"><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="5" mb="0" cb="2"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="0" ci="11" mb="0" cb="0"/><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="1" cb="1"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="11" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="7" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="69"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="14"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Formatter.java"><line nr="8" mi="3" ci="0" mb="0" cb="0"/><line nr="10" mi="0" ci="5" mb="0" cb="2"/><line nr="11" mi="0" ci="4" mb="0" cb="0"/><line nr="12" mi="0" ci="5" mb="0" cb="2"/><line nr="13" mi="0" ci="4" mb="0" cb="0"/><line nr="14" mi="0" ci="5" mb="1" cb="1"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="27"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FormatStylish.java"><line nr="4" mi="3" ci="0" mb="0" cb="0"/><line nr="6" mi="0" ci="5" mb="0" cb="0"/><line nr="7" mi="0" ci="4" mb="1" cb="1"/><line nr="8" mi="0" ci="10" mb="0" cb="2"/><line nr="9" mi="0" ci="5" mb="0" cb="0"/><line nr="10" mi="0" ci="6" mb="0" cb="2"/><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="12" mi="0" ci="4" mb="0" cb="0"/><line nr="14" mi="0" ci="6" mb="0" cb="2"/><line nr="15" mi="0" ci="8" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="6" mb="0" cb="2"/><line nr="19" mi="0" ci="8" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="2"/><line nr="23" mi="0" ci="8" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="8" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="114"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FormatPlain.java"><line nr="6" mi="3" ci="0" mb="0" cb="0"/><line nr="8" mi="0" ci="4" mb="0" cb="0"/><line nr="9" mi="0" ci="4" mb="1" cb="1"/><line nr="10" mi="0" ci="10" mb="0" cb="2"/><line nr="11" mi="0" ci="5" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="2"/><line nr="13" mi="0" ci="5" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="2"/><line nr="18" mi="0" ci="6" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="2"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="1" cb="1"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="2" cb="2"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="1" cb="1"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="99"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="4" covered="22"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Differ.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="10" mb="0" cb="2"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="2"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="2"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="2"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="2" ci="2" mb="3" cb="1"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="2" cb="2"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="134"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="3" covered="30"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="81" covered="453"/><counter type="BRANCH" missed="13" covered="43"/><counter type="LINE" missed="24" covered="94"/><counter type="COMPLEXITY" missed="22" covered="29"/><counter type="METHOD" missed="10" covered="13"/><counter type="CLASS" missed="1" covered="8"/></package><counter type="INSTRUCTION" missed="81" covered="453"/><counter type="BRANCH" missed="13" covered="43"/><counter type="LINE" missed="24" covered="94"/><counter type="COMPLEXITY" missed="22" covered="29"/><counter type="METHOD" missed="10" covered="13"/><counter type="CLASS" missed="1" covered="8"/></report>